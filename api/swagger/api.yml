openapi: 3.0.0
info:
  title: Kifup API
  description: API for Shogi game record management service
  version: 1.0.0

paths:
  /api/status:
    get:
      summary: サーバー状態の取得（ヘルスチェック）
      tags: [Server]
      responses:
        '200':
          $ref: '#/components/responses/ServerStatusResponse'
        '400':
          $ref: '#/components/responses/ErrorResponse'
        '500':
          $ref: '#/components/responses/ErrorResponse'
  /api/account/verify-email:
    post:
      summary: メール認証用コードの送信リクエスト
      tags: [Account]
      description: アカウント作成時のメールアドレス確認用。認証コードを生成してメールで送信します。
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MailVerificationRequest'
      responses:
        '200':
          $ref: '#/components/responses/SuccessResponse'
        '400':
          $ref: '#/components/responses/ErrorResponse'
        '500':
          $ref: '#/components/responses/ErrorResponse'
  /api/account/verify-code:
    post:
      summary: メール認証コードの検証
      tags: [Account]
      description: 送信した認証コードの有効性を確認します。
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerifyCodeRequest'
  /api/account:
    post:
      summary: アカウント作成
      tags: [Account]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAccountRequest'
      responses:
        '200':
          $ref: '#/components/responses/SuccessResponse'
        '400':
          $ref: '#/components/responses/ErrorResponse'
        '500':
          $ref: '#/components/responses/ErrorResponse'
    get:
      summary: アカウント情報の取得（自身）
      tags: [Account]
      security:
        - BearerAuth: []
      responses:
        '200':
          $ref: '#/components/responses/AccountResponse'
        '401':
          $ref: '#/components/responses/ErrorResponse'
        '500':
          $ref: '#/components/responses/ErrorResponse'
    delete:
      summary: アカウント削除
      tags: [Account]
      security:
        - BearerAuth: []
      responses:
        '200':
          $ref: '#/components/responses/SuccessResponse'
        '401':
          $ref: '#/components/responses/ErrorResponse'
        '500':
          $ref: '#/components/responses/ErrorResponse'
  /api/account/password:
    put:
      summary: パスワード変更
      tags: [Account]
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangePasswordRequest'
      responses:
        '200':
          $ref: '#/components/responses/SuccessResponse'
        '400':
          $ref: '#/components/responses/ErrorResponse'
        '401':
          $ref: '#/components/responses/ErrorResponse'
        '500':
          $ref: '#/components/responses/ErrorResponse'
  /api/account/{accountID}:
    parameters:
      - name: accountID
        in: path
        required: true
        schema:
          type: string
    get:
      summary: アカウント情報の取得（ID指定）
      tags: [Account]
      security:
        - BearerAuth: []
      responses:
        '200':
          $ref: '#/components/responses/AccountResponse'
        '500':
          $ref: '#/components/responses/ErrorResponse'
  /api/session/login:
    post:
      summary: ログイン（セッショントークン取得）
      tags: [Session]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          $ref: '#/components/responses/TokenResponse'
        '400':
          $ref: '#/components/responses/ErrorResponse'
        '401':
          $ref: '#/components/responses/ErrorResponse'
        '500':
          $ref: '#/components/responses/ErrorResponse'
  /api/session/refresh:
    post:
      summary: トークンリフレッシュ
      tags: [Session]
      security:
        - BearerAuth: []
      responses:
        '200':
          $ref: '#/components/responses/TokenResponse'
        '401':
          $ref: '#/components/responses/ErrorResponse'
        '500':
          $ref: '#/components/responses/ErrorResponse'
  /api/kifu:
    get:
      summary: 棋譜リスト取得
      tags: [Kifu]
      security:
        - BearerAuth: []
      parameters:
        - name: owner
          in: query
          description: "所有者による絞り込み（nullの場合は全公開棋譜、'me'の場合は自身の棋譜）"
          schema:
            type: string
        - $ref: '#/components/parameters/PageRequestPage'
        - $ref: '#/components/parameters/PageRequestLimit'
      responses:
        '200':
          $ref: '#/components/responses/KifuListResponse'
        '400':
          $ref: '#/components/responses/ErrorResponse'
        '401':
          $ref: '#/components/responses/ErrorResponse'
        '500':
          $ref: '#/components/responses/ErrorResponse'
    post:
      summary: 棋譜新規作成
      tags: [Kifu]
      description: typeにはfileまたはpositionを指定し、fileの場合はcontentが、positionの場合はinitial_positionが必須となる。
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateKifuRequest'
      responses:
        '200':
          $ref: '#/components/responses/IDResponse'
        '400':
          $ref: '#/components/responses/ErrorResponse'
        '401':
          $ref: '#/components/responses/ErrorResponse'
        '500':
          $ref: '#/components/responses/ErrorResponse'
  /api/kifu/{kifuID}:
    parameters:
      - name: kifuID
        in: path
        required: true
        schema:
          type: string
    get:
      summary: 棋譜詳細取得
      tags: [Kifu]
      description: valiationsにはmove-listのリストが入る。
      security:
        - BearerAuth: []
      responses:
        '200':
          $ref: '#/components/responses/KifuDetailResponse'
        '400':
          $ref: '#/components/responses/ErrorResponse'
        '401':
          $ref: '#/components/responses/ErrorResponse'
        '404':
          $ref: '#/components/responses/ErrorResponse'
        '500':
          $ref: '#/components/responses/ErrorResponse'
    delete:
      summary: 棋譜削除
      tags: [Kifu]
      security:
        - BearerAuth: []
      responses:
        '200':
          $ref: '#/components/responses/SuccessResponse'
        '401':
          $ref: '#/components/responses/ErrorResponse'
        '404':
          $ref: '#/components/responses/ErrorResponse'
        '500':
          $ref: '#/components/responses/ErrorResponse'
    put:
      summary: 棋譜情報更新
      tags: [Kifu]
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateKifuInfoRequest'
      responses:
        '200':
          $ref: '#/components/responses/SuccessResponse'
        '400':
          $ref: '#/components/responses/ErrorResponse'
        '401':
          $ref: '#/components/responses/ErrorResponse'
        '404':
          $ref: '#/components/responses/ErrorResponse'
        '500':
          $ref: '#/components/responses/ErrorResponse'

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  parameters:
    PageRequestPage:
      name: page
      in: query
      description: ページ番号
      schema:
        type: integer
        minimum: 1
        default: 1
    PageRequestLimit:
      name: limit
      in: query
      description: 1ページあたりの件数
      schema:
        type: integer
        minimum: 1
        maximum: 100
        default: 20
  responses:
    SuccessResponse:
      description: 成功レスポンス
      content:
        application/json:
          schema:
            type: object
            properties:
              ok:
                type: boolean
                example: true
    ErrorResponse:
      description: エラー
      content:
        application/json:
          schema:
            type: object
            properties:
              ok:
                type: boolean
                example: false
              data:
                type: string
                example: "some error occurred"
    ServerStatusResponse:
      description: サーバー状態
      content:
        application/json:
          schema:
            type: object
            properties:
              ok:
                type: boolean
                example: false
              data:
                $ref: '#/components/schemas/ServerStatus'
    IDResponse:
      description: データ登録成功
      content:
        application/json:
          schema:
            type: object
            properties:
              ok:
                type: boolean
                example: false
              data:
                type: string
                description: Created data ID
                example: "some error occurred"
    TokenResponse:
      description: トークン取得成功
      content:
        application/json:
          schema:
            type: object
            properties:
              ok:
                type: boolean
                example: false
              data:
                type: string
                example: "eyJhbGciOiJIUzI1NiIs..."
    AccountResponse:
      description: アカウント情報取得成功
      content:
        application/json:
          schema:
            type: object
            properties:
              ok:
                type: boolean
                example: false
              data:
                $ref: '#/components/schemas/Account'
    KifuListResponse:
      description: 棋譜リスト取得成功
      content:
        application/json:
          schema:
            type: object
            properties:
              ok:
                type: boolean
                example: true
              data:
                type: array
                items:
                  $ref: '#/components/schemas/KifuSummary'
              pagination:
                $ref: '#/components/schemas/Pagination'
    KifuDetailResponse:
      description: 棋譜詳細取得成功
      content:
        application/json:
          schema:
            type: object
            properties:
              ok:
                type: boolean
                example: true
              data:
                $ref: '#/components/schemas/KifuDetail'
  schemas:
    ServerStatus:
      type: object
      properties:
        mode:
          type: string
          example: "debug"
        environment:
          type: string
          example: "development"
        status:
          type: string
          example: "running"
    MailVerificationRequest:
      type: object
      required: [email]
      properties:
        email:
          type: string
          format: email
          example: "caocao@example.com"
    VerifyCodeRequest:
      type: object
      required: [email, code]
      properties:
        email:
          type: string
          format: email
          example: "caocao@example.com"
        code:
          type: string
          minLength: 6
          maxLength: 6
          example: "123456"
    CreateAccountRequest:
      type: object
      required: [name, email, password]
      properties:
        name:
          type: string
          minLength: 2
          maxLength: 60
          example: "曹操孟徳"
        email:
          type: string
          format: email
          example: "caocao@example.com"
        password:
          type: string
          format:  password
          example: "password123"
        code:
          type: string
          minLength: 6
          maxLength: 6
          example: "123456"
    LoginRequest:
      type: object
      required: [email, password]
      properties:
        email:
          type: string
          format: email
          example: "caocao@example.com"
        password:
          type: string
          format:  password
          example: "password123"
    ChangePasswordRequest:
      type: object
      required: [password]
      properties:
        password:
          type: string
          format:  password
          example: "newPassword456"
    CreateKifuRequest:
      type: object
      required: [type]
      properties:
        type:
          type: string
          enum: [file, position]
          description: 作成方法（ファイルまたは初期局面から）
        content:
          type: string
          description: type=fileの場合の棋譜ファイル内容
        initial_position:
          type: string
          description: type=positionの場合の初期局面（SFEN形式）
    UpdateKifuInfoRequest:
      type: object
      required: [title]
      properties:
        title:
          type: string
          minLength: 1
          maxLength: 100
          description: タイトル
        is_public:
          type: boolean
          description: 公開フラグ
        game_info:
          type: object
          additionalProperties:
            type: string
          description: 対局情報
        tags:
          type: array
          items:
            type: string
          description: タグリスト
    Account:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        icon_id:
          type: string
        introduction:
          type: string
        created_at:
          type: string
          format: date-time
        last_login_at:
          type: string
          format: date-time
    Pagination:
      type: object
      properties:
        total:
          type: integer
          description: 総件数
        pages:
          type: integer
          description: 総ページ数
        current:
          type: integer
          description: 現在のページ番号
        limit:
          type: integer
          description: 1ページあたりの件数
    KifuSummary:
      type: object
      properties:
        id:
          type: string
        owner:
          $ref: '#/components/schemas/Account'
        title:
          type: string
        is_public:
          type: boolean
        updated_at:
          type: string
          format: date-time
        game_info:
          type: object
          additionalProperties:
            type: string
        tags:
          type: array
          items:
            type: string
    KifuDetail:
      type: object
      properties:
        id:
          type: string
        owner:
          $ref: '#/components/schemas/Account'
        title:
          type: string
        is_public:
          type: boolean
        initial_position:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        game_info:
          type: object
          additionalProperties:
            type: string
        tags:
          type: array
          items:
            type: string
        moves:
          $ref: '#/components/schemas/KifuMoveLine'
    KifuMoveLine:
      type: array
      items:
        $ref: '#/components/schemas/KifuMove'
    KifuMove:
      type: object
      required: [number, piece, from_place, to_place]
      properties:
        number:
          type: integer
          description: 手数
        piece:
          type: integer
          description: 駒種
        from_place:
          type: integer
          description: 移動元の位置
        to_place:
          type: integer
          description: 移動先の位置
        promote:
          type: boolean
          description: 成り判定
        catch_piece:
          type: integer
          description: 取得した駒種
        direction_sign:
          type: string
          description: 方向を表す記号
        variations:
          type: array
          items:
            $ref: '#/components/schemas/KifuMoveLine'
          description: 変化手順
        comment:
          type: string
          description: コメント
        time_spent_ms:
          type: integer
          description: 消費時間（ミリ秒）



